/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ui;

import Business.DTO.StaffDTO;
import Business.Sevice.StaffSeviceB;
import DAL.Entity.Staff;
import DAL.Service.StaffService;
import Utils.BoxDiaglog; 
import Utils.DateHelper;
import Utils.ImageHelper;
import java.awt.Color;
import java.awt.Image;
import java.awt.Point;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author pc
 */
public class ThemNhanVien extends javax.swing.JFrame {
    
    List<Staff> listNV;
    StaffService serStaff;
    int index;
    DefaultTableModel model = new DefaultTableModel();
    Random rd = new Random();
    //SimpleDateFormat ft = new SimpleDateFormat ("E MMM dd, yyyy");
    DateHelper DATE_FORMATER;
    final SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
    String FileAnh;
    String FindName = null;
    ImageIcon icon;
    
    Staff staffLogin;
    StaffService staffService;
    
    public ThemNhanVien() {
        initComponents();
        setLocationRelativeTo(null);
        System.out.println("Chào");
        staffService = new StaffService();
        staffLogin = staffService.select_by_id(Login.userLogIn.getMaNhanVien());

//        JFrame frame = new JFrame();
//        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
//        frame.setUndecorated(true);
//        frame.setVisible(true);
        serStaff = new StaffService();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        LoadData();
//        TableModel DefaultTableModel = tblNhanvien.getModel();
//        if (model.getRowCount() > 0) {
//            index = 1;
//           Showdetails();
//        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnThongke = new javax.swing.JButton();
        btnNhanvien = new javax.swing.JButton();
        btnSanpham = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanvien = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtSeach = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        txtTaikhoan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMatkhau = new javax.swing.JPasswordField();
        txtTenNV = new javax.swing.JTextField();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        txtDiachi = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dateNgaySinh = new com.toedter.calendar.JDateChooser();
        txtDienthoai = new javax.swing.JTextField();
        rdoAdmin = new javax.swing.JRadioButton();
        rdoNhanvien = new javax.swing.JRadioButton();
        rdoHD = new javax.swing.JRadioButton();
        rdoKHD = new javax.swing.JRadioButton();
        txtEmail = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lblAnh = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(74, 31, 61));

        btnThongke.setBackground(new java.awt.Color(153, 153, 255));
        btnThongke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/thongkes.png"))); // NOI18N
        btnThongke.setText("Thống kê");
        btnThongke.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnThongke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongkeActionPerformed(evt);
            }
        });

        btnNhanvien.setBackground(new java.awt.Color(153, 153, 255));
        btnNhanvien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nhanviens.png"))); // NOI18N
        btnNhanvien.setText("Nhân viên");
        btnNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhanvienActionPerformed(evt);
            }
        });

        btnSanpham.setBackground(new java.awt.Color(153, 153, 255));
        btnSanpham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/products.png"))); // NOI18N
        btnSanpham.setText("Sản phẩm");
        btnSanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSanphamActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 255, 255), null));

        tblNhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Tài khoản", "Tên nhân viên", "Mật khẩu", "Giới tính", "Địa chỉ", "Điện thoại", "Email", "Ngày sinh ", "Vai trò", "Trạng thái", "Hình ảnh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanvienMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblNhanvienMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanvien);

        jPanel3.setBackground(new java.awt.Color(74, 31, 61));

        txtSeach.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm nhân viên:"));
        txtSeach.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSeachCaretUpdate(evt);
            }
        });
        txtSeach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSeachActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("QUẢN LÝ NHÂN VIÊN");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111)
                .addComponent(txtSeach, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(363, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addComponent(txtSeach, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi tiết nhân viên"));

        btnNew.setBackground(new java.awt.Color(255, 153, 153));
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/new-document.png"))); // NOI18N
        btnNew.setText("Tạo mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(255, 153, 153));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/history-book.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 153, 153));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 153, 153));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/admin.png"))); // NOI18N
        btnXoa.setText("Khoá tài khoản");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(153, 255, 255));

        txtTaikhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTaikhoanActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Tài khoản:");

        txtMatkhau.setText("123456");
        txtMatkhau.setEnabled(false);
        txtMatkhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatkhauActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Địa chỉ:");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Giới tính:");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Tên nhân viên:");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Mật khẩu:");

        dateNgaySinh.setDateFormatString("yyyy-MM-dd");

        txtDienthoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDienthoaiActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdoAdmin);
        rdoAdmin.setText("Admin");

        buttonGroup2.add(rdoNhanvien);
        rdoNhanvien.setSelected(true);
        rdoNhanvien.setText("Nhân viên");

        buttonGroup3.add(rdoHD);
        rdoHD.setSelected(true);
        rdoHD.setText("Đang hoạt động");
        rdoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHDActionPerformed(evt);
            }
        });

        buttonGroup3.add(rdoKHD);
        rdoKHD.setText("Không hoạt động");
        rdoKHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoKHDActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel14.setText("Email:");

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Trạng thái:");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Vai trò:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Điện thoại:");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Ngày sinh:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMatkhau, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(rdoNhanvien)
                                .addGap(28, 28, 28)
                                .addComponent(rdoAdmin))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(48, 48, 48)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtTaikhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel12))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(86, 86, 86)
                                    .addComponent(rdoNu))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(dateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(35, 35, 35))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13)
                                .addComponent(jLabel9))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDiachi, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(rdoKHD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rdoHD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdoNam)
                            .addComponent(txtDienthoai, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {rdoAdmin, rdoNhanvien});

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {rdoNam, rdoNu});

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtDienthoai, txtEmail});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTaikhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMatkhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(txtDienthoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoAdmin)
                            .addComponent(rdoNhanvien)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(rdoNam))
                                .addGap(3, 3, 3))
                            .addComponent(rdoNu))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiachi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(rdoHD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdoKHD))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel13)))
                        .addGap(33, 33, 33))))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {rdoAdmin, rdoNhanvien});

        jPanel6.setPreferredSize(new java.awt.Dimension(198, 223));

        lblAnh.setPreferredSize(new java.awt.Dimension(174, 197));
        lblAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Ảnh nhân viên");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel4))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(34, 34, 34)
                            .addComponent(btnNew)
                            .addGap(18, 18, 18)
                            .addComponent(btnThem)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnSua)
                            .addGap(18, 18, 18)
                            .addComponent(btnXoa))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnNew, btnSua, btnThem, btnXoa});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))
        );

        jPanel3.getAccessibleContext().setAccessibleName("Tìm kiếm");

        btnExit.setBackground(new java.awt.Color(153, 153, 255));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/exits.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Admin");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logos.png"))); // NOI18N

        jButton4.setBackground(new java.awt.Color(153, 153, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/history-book.png"))); // NOI18N
        jButton4.setText("Lịch sử bán hàng");

        jButton1.setText("Danh sách tài khoản bị khoá");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnSanpham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNhanvien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)))
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExit, btnNhanvien, btnSanpham, btnThongke, jButton1, jButton4});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(14, 14, 14)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnExit, jButton1});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThongkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongkeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThongkeActionPerformed

    private void btnNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhanvienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNhanvienActionPerformed

    private void btnSanphamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSanphamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSanphamActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        
        if (BoxDiaglog.Confirm(this, "Bạn thật sự muốn thoát?")) {
            this.dispose();
            Home home = new Home(staffLogin.getTaiKhoan(), staffLogin.getMaNhanVien(), staffLogin.getTenNhanVien(), staffLogin.getMatKhau());
            home.setVisible(true);
            //System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtMatkhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatkhauActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtMatkhauActionPerformed
    Staff getModel() {
        Staff entiry = new Staff();
        entiry.setTaiKhoan(txtTaikhoan.getText());
        entiry.setTenNhanVien(txtTenNV.getText());
        entiry.setMatKhau(new String(txtMatkhau.getPassword()));
        entiry.setGioiTinh(rdoNam.isSelected());
        entiry.setDiaChi(txtDiachi.getText());
        entiry.setEmail(txtEmail.getText());
        entiry.setNgaySinh(dateNgaySinh.getDate());
        entiry.setDienThoai(txtDienthoai.getText());
        entiry.setVaiTro(rdoNhanvien.isSelected());
        if (rdoNhanvien.isSelected()) {
            entiry.setVaiTro(false);
        }
        if (rdoAdmin.isSelected()) {
            entiry.setVaiTro(true);
        }
        entiry.setTrangThai(rdoHD.isSelected());
        entiry.setAvatar(FileAnh);
        return entiry;
        
    }
    
   
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (BoxDiaglog.Confirm(this, "Bạn thật sự muốn thêm nhân viên này?")) {
            Staff mod = getModel();
            String CheckName = "^[A-Za-zÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚÝàáâãèéêìíòóôõùúýĂăĐđĨĩŨũƠơƯưẠ-ỹ ]{3,25}$";
            String Checksdt = "(086|096|097|098|032|033|034|035|036|037|038|039|089|090|093|070|079|077|078|076|088|091|094|083|084|085|081|082|092|056|058|099|059)[0-9]{7}";
            String email = "^[a-zA-Z][a-zA-Z0-9_\\.]{2,32}@[a-zA-Z0-9]{2,10}(\\.[a-zA-Z0-9]{2,4}){1,2}$";
            try {
                if (txtTaikhoan.getText().isEmpty()) {
                    BoxDiaglog.alert(this, "Tài khoản không được để trống");
                    txtTaikhoan.setBackground(Color.pink);
                    txtTaikhoan.requestFocus();
                    return;
                }
                txtTaikhoan.setBackground(Color.white);
                if (txtTenNV.getText().isEmpty()) {
                    BoxDiaglog.alert(this, "Tài khoản không được để trống");
                    txtTaikhoan.setBackground(Color.pink);
                    txtTaikhoan.requestFocus();
                    return;
                }
                if (!txtTenNV.getText().matches(CheckName)) {
                    BoxDiaglog.alert(this, "Tên phải có đấu \n hoặc viết thường");
                    txtTaikhoan.setBackground(Color.pink);
                    txtTaikhoan.requestFocus();
                    return;
                }
                txtTaikhoan.setBackground(Color.white);
                if (txtDiachi.getText().isEmpty()) {
                    BoxDiaglog.alert(this, "Địa chỉ không được để trống");
                    txtDiachi.setBackground(Color.pink);
                    txtDiachi.requestFocus();
                    return;
                }
                txtDiachi.setBackground(Color.white);
                if (dateNgaySinh.getDate() == null) {
                    BoxDiaglog.alert(this, "Xin chọn ngày sinh");
                    return;
                }
                Date d = dateNgaySinh.getDate();
                System.out.println(d);
                if (d.getTime() > new Date().getTime()) {
                    BoxDiaglog.alert(this, "Ngày sinh phải nhỏ hơn năn hiện tại!");
                    dateNgaySinh.setDate(null);
                    return;
                }
                long ngaysinhh = dateNgaySinh.getDate().getTime();
                if (txtDienthoai.getText().isEmpty()) {
                    BoxDiaglog.alert(this, "Số điện thoại không được để trống");
                    txtDienthoai.setBackground(Color.pink);
                    txtDienthoai.requestFocus();
                    return;
                }
                if (!txtDienthoai.getText().matches(Checksdt)) {
                    BoxDiaglog.alert(this, "Số điện thoại phải đủ 10 số \n Đúng các đầu dố của các nhà mạng");
                    txtDienthoai.setBackground(Color.pink);
                    txtDienthoai.requestFocus();
                    return;
                    
                }
                txtDienthoai.setBackground(Color.white);
                if (txtEmail.getText().isEmpty()) {
                    BoxDiaglog.alert(this, "Email không được để trống");
                    txtEmail.setBackground(Color.pink);
                    txtEmail.requestFocus();
                    return;
                }
                if (!txtEmail.getText().matches(email)) {
                    BoxDiaglog.alert(this, "Email không đúng định dạng!");
                    txtEmail.setBackground(Color.pink);
                    txtEmail.requestFocus();
                    return;
                }
                txtEmail.setBackground(Color.white);
                for (int i = 0; i < model.getRowCount(); i++) {
                    if (model.getValueAt(index, 0).equals(mod.getTaiKhoan())) {
                        BoxDiaglog.alert(this, "Tài khoản đã tồn tại");
                        txtTaikhoan.setBackground(Color.pink);
                        txtTaikhoan.requestFocus();
                        return;
                    }
                    if (model.getValueAt(index, 5).equals(mod.getDienThoai())) {
                        BoxDiaglog.alert(this, "Số điện thoại đã tồn tại");
                        txtDienthoai.setBackground(Color.pink);
                        txtDienthoai.requestFocus();
                        return;
                    }
                    if (model.getValueAt(index, 6).equals(mod.getEmail())) {
                        BoxDiaglog.alert(this, "Email đã tồn tại");
                        txtEmail.requestFocus();
                        txtEmail.setBackground(Color.pink);
                        return;
                    }
                }
                
                UUID uuid = UUID.randomUUID();
                
                mod.setMaNhanVien(uuid.toString());
                serStaff.insert(mod);
                LoadData();
                BoxDiaglog.alert(this, "Thêm nhân viên thành công");
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("Lỗi");
                BoxDiaglog.alert(this, "Thêm thất bại!");
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed
    

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
//        txtMaNV.setText("");
        txtTenNV.setText("");
        rdoNam.setSelected(true);
        txtDiachi.setText("");
        dateNgaySinh.setDate(null);
        txtDienthoai.setText("");
        rdoNhanvien.setSelected(true);
        rdoHD.setSelected(true);
        txtEmail.setText("");
        txtTenNV.requestFocus();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (BoxDiaglog.Confirm(this, "Bạn thật sự muốn sửa nhân viên này chứ?")) {
            Staff mod = getModel();
            mod.setMaNhanVien(listNV.get(index).getMaNhanVien());
            System.out.println(mod.getMaNhanVien());
            String CheckName = "^[A-Za-zÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚÝàáâãèéêìíòóôõùúýĂăĐđĨĩŨũƠơƯưẠ-ỹ ]{3,25}$";
            String Checksdt = "(086|096|097|098|032|033|034|035|036|037|038|039|089|090|093|070|079|077|078|076|088|091|094|083|084|085|081|082|092|056|058|099|059)[0-9]{7}";
            String email = "^[a-zA-Z][a-zA-Z0-9_\\.]{2,32}@[a-zA-Z0-9]{2,10}(\\.[a-zA-Z0-9]{2,4}){1,2}$";
            try {
                if (txtTaikhoan.getText().isEmpty()) {
                    BoxDiaglog.alert(this, "Tài khoản không được để trống");
                    txtTaikhoan.setBackground(Color.pink);
                    txtTaikhoan.requestFocus();
                    return;
                }
                txtTaikhoan.setBackground(Color.white);
                if (txtTenNV.getText().isEmpty()) {
                    BoxDiaglog.alert(this, "Tài khoản không được để trống");
                    txtTaikhoan.setBackground(Color.pink);
                    txtTaikhoan.requestFocus();
                    return;
                }
                if (!txtTenNV.getText().matches(CheckName)) {
                    BoxDiaglog.alert(this, "Tên phải có đấu \n hoặc viết thường");
                    txtTaikhoan.setBackground(Color.pink);
                    txtTaikhoan.requestFocus();
                    return;
                }
                txtTaikhoan.setBackground(Color.white);
                if (txtDiachi.getText().isEmpty()) {
                    BoxDiaglog.alert(this, "Địa chỉ không được để trống");
                    txtDiachi.setBackground(Color.pink);
                    txtDiachi.requestFocus();
                    return;
                }
                txtDiachi.setBackground(Color.white);
                if (dateNgaySinh.getDate() == null) {
                    BoxDiaglog.alert(this, "Xin chọn ngày sinh");
                    return;
                }
                Date d = dateNgaySinh.getDate();
                if (d.getTime() > new Date().getTime()) {
                    BoxDiaglog.alert(this, "Ngày sinh phải nhỏ hơn năn hiện tại!");
                    dateNgaySinh.setDate(null);
                    return;
                }
                long ngaysinhh = dateNgaySinh.getDate().getTime();
                if (txtDienthoai.getText().isEmpty()) {
                    BoxDiaglog.alert(this, "Số điện thoại không được để trống");
                    txtDienthoai.setBackground(Color.pink);
                    txtDienthoai.requestFocus();
                    return;
                }
                if (!txtDienthoai.getText().matches(Checksdt)) {
                    BoxDiaglog.alert(this, "Số điện thoại phải đủ 10 số \n Đúng các đầu dố của các nhà mạng");
                    txtDienthoai.setBackground(Color.pink);
                    txtDienthoai.requestFocus();
                    return;
                }
                txtDienthoai.setBackground(Color.white);
                if (txtEmail.getText().isEmpty()) {
                    BoxDiaglog.alert(this, "Email không được để trống");
                    txtEmail.setBackground(Color.pink);
                    txtEmail.requestFocus();
                    return;
                }
                if (!txtEmail.getText().matches(email)) {
                    BoxDiaglog.alert(this, "Email không đúng định dạng!");
                    txtEmail.setBackground(Color.pink);
                    txtEmail.requestFocus();
                    return;
                }
                txtEmail.setBackground(Color.white);
                int vaitro = rdoAdmin.isSelected() ? 0 : 1;
                int trangthaii = rdoHD.isSelected() ? 0 : 1;
                serStaff.update(mod);
                LoadData();
                BoxDiaglog.alert(this, "Cập nhật thành công");
                System.out.println(getModel().isVaiTro());
            } catch (Exception e) {
                System.out.println("Lỗi");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblNhanvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanvienMouseClicked
        Showdetails();        // TODO add your handling code here:
        index = tblNhanvien.getSelectedRow();

    }//GEN-LAST:event_tblNhanvienMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        Staff mod = getModel();
        try {
            if (BoxDiaglog.Confirm(this, "Bạn có muốn khoá tài khoản nhân viên hay không?")) {
                serStaff.delete(listNV.get(index).getMaNhanVien());
                BoxDiaglog.alert(this, "Khoá tài khoản nhân viên thành công");
                index = listNV.size() - 1;
                Showdetails();
            }
            LoadData();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void txtSeachCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSeachCaretUpdate
        FindName = txtSeach.getText();
        serStaff.Select_By_Name(FindName);
        LoadDataName();
    }//GEN-LAST:event_txtSeachCaretUpdate

    private void txtSeachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSeachActionPerformed
//   FindName = txtSeach.getText();
//        serStaff.Select_By_Name(FindName);
//        LoadData();        // TODO add your handling code here:
    }//GEN-LAST:event_txtSeachActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void rdoKHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoKHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoKHDActionPerformed

    private void txtTaikhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTaikhoanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTaikhoanActionPerformed

    private void lblAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhMouseClicked
        AnhNV();
    }//GEN-LAST:event_lblAnhMouseClicked

    private void txtDienthoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDienthoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDienthoaiActionPerformed

    private void rdoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoHDActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        StaffOffline staOff = new StaffOffline();
        this.dispose();
        staOff.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblNhanvienMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanvienMousePressed

    }//GEN-LAST:event_tblNhanvienMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNhanvien;
    private javax.swing.JButton btnSanpham;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThongke;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private com.toedter.calendar.JDateChooser dateNgaySinh;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JRadioButton rdoAdmin;
    private javax.swing.JRadioButton rdoHD;
    private javax.swing.JRadioButton rdoKHD;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNhanvien;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblNhanvien;
    private javax.swing.JTextField txtDiachi;
    private javax.swing.JTextField txtDienthoai;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtMatkhau;
    private javax.swing.JTextField txtSeach;
    private javax.swing.JTextField txtTaikhoan;
    private javax.swing.JTextField txtTenNV;
    // End of variables declaration//GEN-END:variables

    private void Showdetails() {
        index = tblNhanvien.getSelectedRow();
        model = (DefaultTableModel) tblNhanvien.getModel();
//        txtMaNV.setText(String.valueOf(tblNhanvien.getValueAt(index, 0)));
        txtTaikhoan.setText(String.valueOf(tblNhanvien.getValueAt(index, 0)));
        txtTenNV.setText(String.valueOf(tblNhanvien.getValueAt(index, 1)));
        txtMatkhau.setText(String.valueOf(tblNhanvien.getValueAt(index, 2)));
        if (tblNhanvien.getValueAt(index, 3).equals("Nam")) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtDiachi.setText(String.valueOf(tblNhanvien.getValueAt(index, 4)));
        txtDienthoai.setText(String.valueOf(tblNhanvien.getValueAt(index, 5)));
        txtEmail.setText(String.valueOf(tblNhanvien.getValueAt(index, 6)));
        String date = String.valueOf(tblNhanvien.getValueAt(index, 7));
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            dateNgaySinh.setDate(sdf.parse(date));
        } catch (ParseException ex) {
            Logger.getLogger(Staff.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (tblNhanvien.getValueAt(index, 8).equals("Nhân viên")) {
            rdoNhanvien.setSelected(true);
        } else {
            rdoAdmin.setSelected(true);
        }
        if (tblNhanvien.getValueAt(index, 9).equals("Đang hoạt động")) {
            rdoHD.setSelected(true);
        } else {
            rdoKHD.setSelected(true);
        }
       // lblAnh.setText());
        updateHinh(String.valueOf(tblNhanvien.getValueAt(index, 10)));
        tblNhanvien.setRowSelectionInterval(index, index);
    }
    
    public void updateHinh(String image) {
        try {
            ImageIcon icon1 = new ImageIcon("C:\\Users\\tiennv\\Desktop\\ShopAdam\\rs\\" + image);
            Image im = icon1.getImage();
            ImageIcon icon = new ImageIcon(im.getScaledInstance(lblAnh.getWidth(), lblAnh.getHeight(), im.SCALE_SMOOTH));
            lblAnh.setIcon(icon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi đường dẫn ảnh!!", "Chú ý:", JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }
    
    private void LoadData() {
        model = (DefaultTableModel) tblNhanvien.getModel();
        model.setRowCount(0);
        try {
            listNV = serStaff.selectALL();
            for (Staff x : listNV) {
                Object[] row = {
                    //x.getMaNhanVien(),
                    x.getTaiKhoan(),
                    x.getTenNhanVien(),
                    x.getMatKhau(),
                    x.isGioiTinh() ? "Nam" : "Nữ",
                    x.getDiaChi(),
                    x.getDienThoai(),
                    x.getEmail(),
                    x.getNgaySinh(),
                    x.isVaiTro() ? "Admin" : "Nhân viên",
                    x.isTrangThai() == true ? "Đang hoạt động" : "Không hoạt động",
                    x.getAvatar()
                };
                System.out.println(x.isTrangThai());
                model.addRow(row);
            }
        } catch (Exception e) {
        }
    }
    
    private void LoadDataName() {
        model = (DefaultTableModel) tblNhanvien.getModel();
        model.setRowCount(0);
        
        try {
            listNV = serStaff.Select_By_Name(FindName);
            for (Staff x : listNV) {
                Object[] row = {
                    //x.getMaNhanVien(),
                    x.getTaiKhoan(),
                    x.getTenNhanVien(),
                    x.getMatKhau(),
                    x.isGioiTinh() ? "Nam" : "Nữ",
                    x.getDiaChi(),
                    x.getDienThoai(),
                    x.getEmail(),
                    x.getNgaySinh(),
                    x.isVaiTro() ? "Admin" : "Nhân viên",
                    x.isTrangThai() == true ? "Không hoạt động" : "Đang hoạt động",
                    x.getAvatar()
                
                };
                System.out.println(x.isTrangThai());
                model.addRow(row);
            }
        } catch (Exception e) {
        }
    }
    
    private void AnhNV() {
        FileAnh = null;
        try {
            JFileChooser fc = new JFileChooser();
            fc.setDialogTitle("Mở ảnh");
            fc.showOpenDialog(null);
            File file = ImageHelper.resizeAndSave(fc.getSelectedFile(), 174, 197);
            FileAnh = file.getAbsolutePath();
            lblAnh.setIcon(ResizeImage(String.valueOf(FileAnh)));
            setLblImageIcon(file.getName());
        } catch (Exception e) {
            BoxDiaglog.alert(this, "Lỗi không chọn được ảnh");
        }
        
    }
    
    private void setLblImageIcon(String img) {
        FileAnh = img;
        lblAnh.setIcon(ImageHelper.read(FileAnh));
    }
    
    private Icon ResizeImage(String ImagePath) {
        ImageIcon Myimage = new ImageIcon(ImagePath);
        Image img = Myimage.getImage();
        Image newImage = img.getScaledInstance(lblAnh.getWidth(), lblAnh.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImage);
        return image;
    }


    
}
